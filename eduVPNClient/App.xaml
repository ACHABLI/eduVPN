<Application
    x:Class="eduVPNClient.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    StartupUri="View/ConnectWizardView.xaml">

    <Application.Resources>
        <!-- eduVPN Colors -->
        <Color x:Key="eduVPNBlue">#FF02B4D2</Color>
        <Color x:Key="eduVPNBlueLight">#4402B4D2</Color>
        <Color x:Key="eduVPNOrange">#FFED6B06</Color>
        <Color x:Key="eduVPNWhite">#FFFFFFFF</Color>
        <Color x:Key="eduVPNBlack">#FF000000</Color>
        <Color x:Key="eduVPNGray">#FF646464</Color>

        <!-- eduVPN Brushes -->
        <SolidColorBrush x:Key="eduVPNHeaderBrushKey" Color="{StaticResource eduVPNBlue}" />
        <SolidColorBrush x:Key="eduVPNHeaderTextBrushKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNWindowBrushKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNWindowTextBrushKey" Color="{StaticResource eduVPNBlack}" />
        <SolidColorBrush x:Key="eduVPNWindowBorderKey" Color="{StaticResource eduVPNGray}" />
        <SolidColorBrush x:Key="eduVPNLogoOrangeKey" Color="{StaticResource eduVPNOrange}" />
        <SolidColorBrush x:Key="eduVPNLogoWhiteKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNLogoBlackKey" Color="{StaticResource eduVPNBlack}" />
        <SolidColorBrush x:Key="eduVPNChoiceButtonHoverBrushKey" Color="{StaticResource eduVPNBlueLight}" />

        <!-- eduVPN Buttons -->
        <Style x:Key="eduVPNHeaderButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    Background="{StaticResource eduVPNHeaderTextBrushKey}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    CornerRadius="4">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="eduVPNNavigationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                x:Name="Border"
                                Fill="{x:Null}"
                                Stroke="{StaticResource eduVPNHeaderBrushKey}"/>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="eduVPNChoiceButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    Background="{StaticResource eduVPNChoiceButtonHoverBrushKey}"
                                    CornerRadius="4">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN Labels -->
        <Style x:Key="eduVPNHeaderStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="eduVPNPageTitleStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource {x:Type Label}}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- eduVPN Text Blocks -->
        <Style x:Key="eduVPNTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="10"/>
        </Style>
        <Style x:Key="eduVPNNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="FontSize" Value="11"/>
        </Style>
        <Style x:Key="eduVPNChoiceNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNNoteStyle}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,130,10,10"/>
        </Style>

        <!-- eduVPN ListBoxes -->
        <Style x:Key="eduVPNListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Lists -->
        <DataTemplate x:Key="eduVPNInstanceSelectionItemTemplate">
            <Grid
                Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Separator
                    Grid.ColumnSpan="2"
                    Margin="0"
                    Background="{StaticResource eduVPNHeaderBrushKey}">
                    <Separator.Style>
                        <Style TargetType="Separator">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Separator.Style>
                </Separator>

                <!-- TODO: Provide alternative Source for instances with Logo==null. -->
                <Image
                    Grid.Column="0"
                    Grid.Row="1"
                    Source="{Binding Logo}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,10,5,10"
                    RenderOptions.BitmapScalingMode="Fant"/>

                <TextBlock
                    Grid.Column="1"
                    Grid.Row="1"
                    Text="{Binding DisplayName}"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    TextWrapping="Wrap"
                    TextAlignment="Center"
                    Margin="5,10,0,10"
                    FontSize="14"/>
            </Grid>
        </DataTemplate>
        <Style x:Key="eduVPNInstanceSelectionItemContainerStyle" TargetType="ListBoxItem" BasedOn="{StaticResource {x:Type ListBoxItem}}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource eduVPNChoiceButtonHoverBrushKey}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN Text Boxes -->
        <Style x:Key="eduVPNTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Combo Boxes -->
        <Style x:Key="eduVPNComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Grids -->
        <Style x:Key="eduVPNCombinedControlGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Stack Panels -->
        <Style x:Key="eduVPNCombinedControlStackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Status Bars StatusBar -->
        <Style x:Key="eduVPNInfoBarStyle" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource {x:Type StatusBar}}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0,1,0,0"/>
            <Style.Resources>
                <Style TargetType="StatusBarItem">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                </Style>
            </Style.Resources>
        </Style>
    </Application.Resources>
</Application>
