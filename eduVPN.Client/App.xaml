<Application
    x:Class="eduVPN.Client.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:eduVPN.Converters"
    xmlns:res="clr-namespace:eduVPN.Client.Resources"
    StartupUri="Views/ConnectWizard.xaml">

    <Application.Resources>
        <!-- eduVPN Colors -->
        <Color x:Key="eduVPNBlue">#FF02B4D2</Color>
        <Color x:Key="eduVPNBlueLight">#4402B4D2</Color>
        <Color x:Key="eduVPNOrange">#FFED6B06</Color>
        <Color x:Key="eduVPNWhite">#FFFFFFFF</Color>
        <Color x:Key="eduVPNBlack">#FF000000</Color>
        <Color x:Key="eduVPNGray">#FF646464</Color>

        <!-- eduVPN Brushes -->
        <SolidColorBrush x:Key="eduVPNHeaderBrushKey" Color="{StaticResource eduVPNBlue}" />
        <SolidColorBrush x:Key="eduVPNHeaderTextBrushKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNWindowBrushKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNWindowTextBrushKey" Color="{StaticResource eduVPNBlack}" />
        <SolidColorBrush x:Key="eduVPNWindowBorderKey" Color="{StaticResource eduVPNGray}" />
        <SolidColorBrush x:Key="eduVPNLogoOrangeKey" Color="{StaticResource eduVPNOrange}" />
        <SolidColorBrush x:Key="eduVPNLogoWhiteKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNLogoBlackKey" Color="{StaticResource eduVPNBlack}" />
        <SolidColorBrush x:Key="eduVPNChoiceButtonHoverBrushKey" Color="{StaticResource eduVPNBlueLight}" />

        <!-- eduVPN Icons -->
        <Canvas x:Key="eduVPNExclamationIcon" Width="25" Height="25">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.15" ScaleX="0.15"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"
                Data="M149.72,154.28H20.36c-5.58,0-9.83-2.04-11.97-5.74c-2.14-3.7-1.78-8.41,1.01-13.24L74.08,23.28c2.79-4.83,6.68-7.49,10.96-7.49c4.28,0,8.17,2.66,10.96,7.49l64.68,112.02c2.79,4.83,3.15,9.53,1.01,13.24C159.55,152.25,155.29,154.28,149.72,154.28z M85.04,21.46c-2.13,0-4.34,1.7-6.05,4.66L14.31,138.14c-1.71,2.96-2.08,5.72-1.01,7.57c1.07,1.85,3.64,2.91,7.06,2.91h129.35c3.42,0,5.99-1.06,7.06-2.91c1.07-1.85,0.7-4.61-1.01-7.57L91.09,26.12C89.38,23.16,87.17,21.46,85.04,21.46z"/>
            <Path
                Fill="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"
                Data="M85.04,141.77c-2.49,0-4.61-0.8-6.35-2.4c-1.74-1.6-2.62-3.54-2.62-5.82c0-2.37,0.87-4.38,2.62-6.04c1.74-1.66,3.86-2.49,6.35-2.49c2.41,0,4.49,0.83,6.26,2.49c1.76,1.66,2.65,3.67,2.65,6.04c0,2.28-0.88,4.23-2.65,5.82C89.53,140.97,87.45,141.77,85.04,141.77z M91.95,51.21l-1.18,63.03H78.94l-1.62-63.03H91.95z"/>
        </Canvas>

        <!-- eduVPN Buttons -->
        <Style x:Key="eduVPNHeaderButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    Background="{StaticResource eduVPNHeaderTextBrushKey}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    CornerRadius="4">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="eduVPNNavigationButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                x:Name="Border"
                                Fill="{x:Null}"
                                Stroke="{StaticResource eduVPNHeaderBrushKey}"/>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="eduVPNChoiceButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    Background="{StaticResource eduVPNChoiceButtonHoverBrushKey}"
                                    CornerRadius="4">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN Labels -->
        <Style x:Key="eduVPNHeaderStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="eduVPNPageTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- eduVPN Text Blocks -->
        <Style x:Key="eduVPNTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="eduVPNNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="FontSize" Value="11"/>
        </Style>
        <Style x:Key="eduVPNChoiceNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNNoteStyle}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,130,10,10"/>
        </Style>
        <Style x:Key="eduVPNListBoxItemTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5,10,0,10"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- eduVPN Separator styles -->
        <Style x:Key="eduVPNListBoxItemSeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN ListBoxes -->
        <Style x:Key="eduVPNListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Lists -->
        <Style x:Key="eduVPNListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource eduVPNChoiceButtonHoverBrushKey}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <DataTemplate x:Key="eduVPNInstanceSelectionItemTemplate">
            <Grid
                Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Separator
                    Grid.ColumnSpan="2"
                    Style="{StaticResource eduVPNListBoxItemSeparatorStyle}"/>

                <!-- TODO: Provide alternative Source for instances with Logo==null. -->
                <Image
                    Grid.Column="0"
                    Grid.Row="1"
                    Source="{Binding Logo}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,10,5,10"
                    RenderOptions.BitmapScalingMode="Fant"/>

                <TextBlock
                    Grid.Column="1"
                    Grid.Row="1"
                    Text="{Binding DisplayName}"
                    Style="{StaticResource eduVPNListBoxItemTextStyle}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="eduVPNProfileSelectionItemTemplate">
            <Grid
                Margin="10,0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Separator
                    Style="{StaticResource eduVPNListBoxItemSeparatorStyle}"/>

                <TextBlock
                    Grid.Row="1"
                    Text="{Binding DisplayName}"
                    Style="{StaticResource eduVPNListBoxItemTextStyle}"/>
            </Grid>
        </DataTemplate>

        <!-- eduVPN Text Boxes -->
        <Style x:Key="eduVPNTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Combo Boxes -->
        <Style x:Key="eduVPNComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Grids -->
        <Style x:Key="eduVPNCombinedControlGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Stack Panels -->
        <Style x:Key="eduVPNCombinedControlStackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Status Bars StatusBar -->
        <Style x:Key="eduVPNInfoBarStyle" TargetType="{x:Type StatusBar}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0,1,0,1"/>
            <Style.Resources>
                <Style TargetType="{x:Type StatusBarItem}">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                </Style>
            </Style.Resources>
        </Style>

        <!-- ConnectWizard pages -->
        <conv:IsNullOrEmptyStringConverter x:Key="IsNullOrEmptyStringConverter" />

        <ControlTemplate x:Key="eduVPNConnectWizardPage" TargetType="{x:Type Page}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StatusBar
                    Style="{StaticResource eduVPNInfoBarStyle}"
                    Visibility="{Binding ErrorMessage, Converter={StaticResource IsNullOrEmptyStringConverter}}">
                    <StatusBarItem>
                        <ContentControl Content="{StaticResource eduVPNExclamationIcon}"/>
                    </StatusBarItem>
                    <StatusBarItem>
                        <TextBlock
                            TextWrapping="Wrap"
                            Text="{Binding ErrorMessage}"/>
                    </StatusBarItem>
                </StatusBar>

                <ContentPresenter
                    Grid.Row="1"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="eduVPNConnectWizardPageWithBack" TargetType="{x:Type Page}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="45"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StatusBar
                    Style="{StaticResource eduVPNInfoBarStyle}"
                    Visibility="{Binding ErrorMessage, Converter={StaticResource IsNullOrEmptyStringConverter}}">
                    <StatusBarItem>
                        <ContentControl Content="{StaticResource eduVPNExclamationIcon}"/>
                    </StatusBarItem>
                    <StatusBarItem>
                        <TextBlock
                            TextWrapping="Wrap"
                            Text="{Binding ErrorMessage}"/>
                    </StatusBarItem>
                </StatusBar>

                <Grid
                    Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="45"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Button
                        Style="{StaticResource eduVPNNavigationButtonStyle}"
                        AutomationProperties.Name="{x:Static res:Strings.ButtonBackTitle}"
                        Command="{Binding Path=NavigateBack}">&lt;</Button>

                    <Label
                        Grid.Column="1"
                        Style="{StaticResource eduVPNPageTitleStyle}"
                        Content="{Binding Title, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>

                <ContentPresenter
                    Grid.Row="2"/>
            </Grid>
        </ControlTemplate>
    </Application.Resources>
</Application>
