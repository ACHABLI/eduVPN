<Application
    x:Class="eduVPN.Client.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:eduVPN.Client.Converters"
    xmlns:res="clr-namespace:eduVPN.Client.Resources"
    StartupUri="Views/ConnectWizard.xaml">

    <Application.Resources>
        <!-- eduVPN Colors -->
        <Color x:Key="eduVPNBlue">#FF02B4D2</Color>
        <Color x:Key="eduVPNBlueLight">#4402B4D2</Color>
        <Color x:Key="eduVPNOrange">#FFED6B06</Color>
        <Color x:Key="eduVPNWhite">#FFFFFFFF</Color>
        <Color x:Key="eduVPNBlack">#FF000000</Color>
        <Color x:Key="eduVPNGray">#FF646464</Color>

        <!-- eduVPN Brushes -->
        <SolidColorBrush x:Key="eduVPNHeaderBrushKey" Color="{StaticResource eduVPNBlue}" />
        <SolidColorBrush x:Key="eduVPNHeaderTextBrushKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNWindowBrushKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNWindowTextBrushKey" Color="{StaticResource eduVPNBlack}" />
        <SolidColorBrush x:Key="eduVPNWindowBorderKey" Color="{StaticResource eduVPNGray}" />
        <SolidColorBrush x:Key="eduVPNLogoOrangeKey" Color="{StaticResource eduVPNOrange}" />
        <SolidColorBrush x:Key="eduVPNLogoWhiteKey" Color="{StaticResource eduVPNWhite}" />
        <SolidColorBrush x:Key="eduVPNLogoBlackKey" Color="{StaticResource eduVPNBlack}" />
        <SolidColorBrush x:Key="eduVPNChoiceButtonHoverBrushKey" Color="{StaticResource eduVPNBlueLight}" />

        <!-- eduVPN Icons -->
        <Canvas x:Key="eduVPNExclamationIcon" Width="25" Height="25">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.15" ScaleX="0.15"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"
                Data="M149.72,154.28H20.36c-5.58,0-9.83-2.04-11.97-5.74c-2.14-3.7-1.78-8.41,1.01-13.24L74.08,23.28c2.79-4.83,6.68-7.49,10.96-7.49c4.28,0,8.17,2.66,10.96,7.49l64.68,112.02c2.79,4.83,3.15,9.53,1.01,13.24C159.55,152.25,155.29,154.28,149.72,154.28z M85.04,21.46c-2.13,0-4.34,1.7-6.05,4.66L14.31,138.14c-1.71,2.96-2.08,5.72-1.01,7.57c1.07,1.85,3.64,2.91,7.06,2.91h129.35c3.42,0,5.99-1.06,7.06-2.91c1.07-1.85,0.7-4.61-1.01-7.57L91.09,26.12C89.38,23.16,87.17,21.46,85.04,21.46z"/>
            <Path
                Fill="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"
                Data="M85.04,141.77c-2.49,0-4.61-0.8-6.35-2.4c-1.74-1.6-2.62-3.54-2.62-5.82c0-2.37,0.87-4.38,2.62-6.04c1.74-1.66,3.86-2.49,6.35-2.49c2.41,0,4.49,0.83,6.26,2.49c1.76,1.66,2.65,3.67,2.65,6.04c0,2.28-0.88,4.23-2.65,5.82C89.53,140.97,87.45,141.77,85.04,141.77z M91.95,51.21l-1.18,63.03H78.94l-1.62-63.03H91.95z"/>
        </Canvas>
        <Canvas x:Key="eduVPNTwoFactorAuthenticationIcon" Width="25" Height="25">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.15" ScaleX="0.15"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M32.65,81.5c2.18-24.56,10.4-34.73,26.13-34.39c15.41,0.33,23.05,12,25.04,34.92c15.27,1.82,14.14,11.13,14.34,23.13c0.19,11.75-0.36,22.44-0.04,32.95c0.29,9.4-3.47,14.37-13.21,14.32c-18.7-0.09-36.22-0.08-53.24-0.01c-9.65,0.04-13.38-4.73-13.42-14.2c-0.05-12.86-0.1-25.26-0.04-38.02C18.25,89.61,19.29,81.09,32.65,81.5 M73.9,81.92c0-5.34,0.36-8.28-0.07-11.1c-1.34-8.72-8.32-14.86-16.11-14.55c-7.96,0.32-13.94,6.82-14.96,15.75c-1.37,12.05-2,10.13,8.74,9.97C58.47,81.9,65.45,81.92,73.9,81.92"/>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M151.86,75.71c-0.2-12,0.93-21.32-14.34-23.13c-1.99-22.91-9.63-34.59-25.04-34.92c-15.73-0.33-23.96,9.83-26.13,34.39c-2.15-0.07-3.98,0.1-5.55,0.47c5.6,7.76,7.46,17.91,8.24,24.7c14.56,3.72,14.66,15.57,14.75,25.27c0.01,0.84,0.02,1.7,0.03,2.57c0.09,5.56,0.02,10.86-0.05,15.99c-0.01,0.63-0.02,1.24-0.02,1.86c11.25-0.02,22.81,0,34.86,0.06c9.75,0.04,13.5-4.92,13.21-14.32C151.5,98.15,152.05,87.46,151.86,75.71z M127.61,52.47c-8.45,0-15.44-0.03-22.4,0.07c-10.74,0.16-10.11,2.08-8.74-9.97c1.01-8.93,7-15.42,14.95-15.75c7.79-0.31,14.78,5.83,16.11,14.55C127.97,44.19,127.61,47.13,127.61,52.47z"/>
        </Canvas>
        <Canvas x:Key="eduVPNUserDisabledIcon" Width="25" Height="25">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.15" ScaleX="0.15"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M66.72,106.87c0-15.17,7.23-28.69,18.41-37.3c-1.72-1.71-3.51-3.29-5.41-4.7c-0.73-0.54-1.27-0.47-1.95,0.23c-4.44,4.65-9.3,7.3-14.48,7.92c-7.08,0.85-13.68-1.92-19.77-8.2c-0.32-0.32-0.87-0.38-1.21-0.13c-5.41,3.72-10.23,9.08-14.42,16.01c-7.66,12.64-12.37,28.07-14.6,45.77c-0.55,4.33-0.85,8.75-1.25,13c0.25,0.25,0.3,0.32,0.36,0.35c7.62,3.34,15.35,5.67,23.17,6.92c6.6,1.05,13.24,1.5,19.86,2.22c0.32,0.04,0.63,0.17,0.95,0.26h8.9c0.47-0.09,0.95-0.25,1.43-0.29c5.27-0.51,10.56-0.79,15.83-1.54c1.92-0.27,3.83-0.61,5.74-0.99C75.32,138,66.72,123.42,66.72,106.87z"/>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M62.17,20.86c1.3,0.25,2.63,0.45,3.92,0.76c8.8,2.18,15.46,10.33,16.36,19.7c1.07,11.04-5.71,21.37-16.12,24.24c-12.34,3.4-25-5.03-27.05-18.11c-1.94-12.33,5.7-23.78,17.44-26.15c0.88-0.18,1.77-0.3,2.65-0.45H62.17z"/>
            <Ellipse
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Canvas.Left="73.8"
                Canvas.Top="66.88"
                Width="79.98"
                Height="79.98"/>
            <Rectangle
                Fill="{StaticResource eduVPNLogoWhiteKey}"
                Canvas.Left="87.02"
                Canvas.Top="102.62"
                Width="53.55"
                Height="8.5"/>
        </Canvas>
        <Canvas x:Key="eduVPNStatusTypeInitializingIcon" Width="22" Height="22">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.12" ScaleX="0.12"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M138.89,62.01h-59.5v-9.13c0-19.54-15.9-35.43-35.43-35.43S8.52,33.35,8.52,52.88v10.73h14.17V52.88c0-11.72,9.54-21.26,21.26-21.26s21.26,9.54,21.26,21.26v9.13H62.4c-8.58,0-15.59,7.02-15.59,15.59v63.68c0,8.58,7.02,15.59,15.59,15.59h76.49c8.58,0,15.59-7.02,15.59-15.59V77.6C154.48,69.03,147.46,62.01,138.89,62.01z"/>
            <Path
                Fill="{StaticResource eduVPNLogoWhiteKey}"
                Data="M43.95,26.52c-14.54,0-26.36,11.83-26.36,26.36v5.63h-3.97v-5.63c0-16.72,13.61-30.33,30.33-30.33s30.33,13.61,30.33,30.33v9.13h-3.97v-9.13C70.31,38.35,58.48,26.52,43.95,26.52z M148.81,141.29c0,5.47-4.45,9.92-9.92,9.92H62.4c-5.47,0-9.92-4.45-9.92-9.92V77.6c0-5.47,4.45-9.92,9.92-9.92h76.49c5.47,0,9.92,4.45,9.92,9.92V141.29z"/>
        </Canvas>
        <Canvas x:Key="eduVPNStatusTypeConnectingIcon" Width="22" Height="22">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.12" ScaleX="0.12"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M138.89,62.01h-59.5v-9.13c0-19.54-15.9-35.43-35.43-35.43S8.52,33.35,8.52,52.88v10.73h14.17V52.88c0-11.72,9.54-21.26,21.26-21.26s21.26,9.54,21.26,21.26v9.13H62.4c-8.58,0-15.59,7.02-15.59,15.59v63.68c0,8.58,7.02,15.59,15.59,15.59h76.49c8.58,0,15.59-7.02,15.59-15.59V77.6C154.48,69.03,147.46,62.01,138.89,62.01z"/>
        </Canvas>
        <Canvas x:Key="eduVPNStatusTypeConnectedIcon" Width="22" Height="22">
            <Canvas.RenderTransform>
                <TransformGroup>
                    <ScaleTransform ScaleY="0.12" ScaleX="0.12"/>
                </TransformGroup>
            </Canvas.RenderTransform>
            <Path
                Fill="{StaticResource eduVPNLogoBlackKey}"
                Data="M123.28,62.01h-2.81v-9.13c0-19.54-15.9-35.43-35.43-35.43s-35.43,15.9-35.43,35.43v9.13h-2.81c-8.57,0-15.59,7.02-15.59,15.59v63.68c0,8.58,7.02,15.59,15.59,15.59h76.49c8.57,0,15.59-7.02,15.59-15.59V77.6C138.87,69.03,131.86,62.01,123.28,62.01z M63.78,52.88c0-11.72,9.54-21.26,21.26-21.26s21.26,9.54,21.26,21.26v9.13H63.78V52.88z"/>
            <Path
                Fill="{StaticResource eduVPNLogoWhiteKey}"
                Data="M77.68,130.16c10.2-10.58,19.72-20,28.62-29.99c2.06-2.31,2-6.5,2.92-9.83c-3.74,0.92-8.66,0.66-10.97,2.98c-6.68,6.68-12.32,14.4-18.37,21.7c-0.88-1.25-1.77-2.5-2.65-3.76c-5.36-1.46-10.72-2.92-16.09-4.39c2.67,5.24,5.07,10.63,8.12,15.65C70.63,124.77,73.28,126.26,77.68,130.16"/>
        </Canvas>

        <!-- eduVPN converters -->
        <conv:StatusBarVisibilityConverter x:Key="StatusBarVisibilityConverter"/>
        <conv:TwoFactorAuthenticationIconVisibilityConverter x:Key="TwoFactorAuthenticationIconVisibilityConverter"/>
        <conv:UserDisabledVisibilityConverter x:Key="UserDisabledVisibilityConverter"/>
        <conv:DateTimeToUserLocaleConverter x:Key="DateTimeToUserLocaleConverter"/>

        <!-- eduVPN Buttons -->
        <Style x:Key="eduVPNHeaderButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    Background="{StaticResource eduVPNHeaderTextBrushKey}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    CornerRadius="4">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="eduVPNButtonBaseStyle" TargetType="{x:Type Button}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="eduVPNButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNButtonBaseStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle
                                x:Name="Border"
                                Fill="{x:Null}"
                                Stroke="{StaticResource eduVPNHeaderBrushKey}"/>
                            <ContentPresenter
                                Margin="5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="eduVPNNavigationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNButtonBaseStyle}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Ellipse
                                x:Name="Border"
                                Fill="{x:Null}"
                                Stroke="{StaticResource eduVPNHeaderBrushKey}"/>
                            <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Fill" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="eduVPNChoiceButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="90"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border
                                    Background="{StaticResource eduVPNChoiceButtonHoverBrushKey}"
                                    CornerRadius="4">
                                    <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN Labels -->
        <Style x:Key="eduVPNHeaderStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style x:Key="eduVPNPageTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <!-- eduVPN Text Blocks -->
        <Style x:Key="eduVPNTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <Style x:Key="eduVPNNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="FontSize" Value="11"/>
        </Style>
        <Style x:Key="eduVPNChoiceNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNNoteStyle}">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="10,130,10,10"/>
        </Style>
        <Style x:Key="eduVPNListBoxItemTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,10,0,10"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="eduVPNInfoLabelTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <Style x:Key="eduVPNInfoTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <!-- eduVPN Separator styles -->
        <Style x:Key="eduVPNListBoxItemSeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Background" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN ListBoxes -->
        <Style x:Key="eduVPNListStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        </Style>
        <Style x:Key="eduVPNInlineListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource eduVPNListStyle}">
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <!-- eduVPN ListBox Items -->
        <Style x:Key="eduVPNListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource eduVPNChoiceButtonHoverBrushKey}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.25"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- eduVPN Text Boxes -->
        <Style x:Key="eduVPNTextBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Combo Boxes -->
        <Style x:Key="eduVPNComboBoxStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Grids -->
        <Style x:Key="eduVPNCombinedControlGridStyle" TargetType="{x:Type Grid}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Stack Panels -->
        <Style x:Key="eduVPNCombinedControlStackPanelStyle" TargetType="{x:Type StackPanel}">
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- eduVPN Status Bars StatusBar -->
        <Style x:Key="eduVPNInfoBarStyle" TargetType="{x:Type StatusBar}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0,1,0,1"/>
            <Style.Resources>
                <Style TargetType="{x:Type StatusBarItem}">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="eduVPNInlineInfoBarStyle" TargetType="{x:Type StatusBar}">
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Style.Resources>
                <Style TargetType="{x:Type StatusBarItem}">
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                </Style>
            </Style.Resources>
        </Style>

        <!-- ConnectWizard page templates -->
        <Style x:Key="eduVPNConnectWizardPage" TargetType="{x:Type Page}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StatusBar
                            Style="{StaticResource eduVPNInfoBarStyle}"
                            Visibility="{Binding Path=ErrorMessage, Converter={StaticResource StatusBarVisibilityConverter}, FallbackValue=Visibility.Collapsed}">
                                <StatusBarItem>
                                    <ContentControl Content="{StaticResource eduVPNExclamationIcon}"/>
                                </StatusBarItem>
                                <StatusBarItem>
                                    <TextBlock
                                    TextWrapping="Wrap"
                                    Text="{Binding Path=ErrorMessage}"/>
                                </StatusBarItem>
                            </StatusBar>

                            <ContentPresenter
                                Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="eduVPNConnectWizardPageWithBack" TargetType="{x:Type Page}" BasedOn="{StaticResource eduVPNConnectWizardPage}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <StatusBar
                                Style="{StaticResource eduVPNInfoBarStyle}"
                                Visibility="{Binding Path=ErrorMessage, Converter={StaticResource StatusBarVisibilityConverter}, FallbackValue=Visibility.Collapsed}">
                                <StatusBarItem>
                                    <ContentControl Content="{StaticResource eduVPNExclamationIcon}"/>
                                </StatusBarItem>
                                <StatusBarItem>
                                    <TextBlock
                                        TextWrapping="Wrap"
                                        Text="{Binding Path=ErrorMessage}"/>
                                </StatusBarItem>
                            </StatusBar>

                            <Grid
                                Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="45"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <Button
                                    Style="{StaticResource eduVPNNavigationButtonStyle}"
                                    AutomationProperties.Name="{x:Static res:Strings.ButtonBackTitle}"
                                    Command="{Binding Path=NavigateBack}">&lt;</Button>

                                <Label
                                    Grid.Column="1"
                                    Style="{StaticResource eduVPNPageTitleStyle}"
                                    Content="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>

                            <ContentPresenter
                                Grid.Row="2"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- eduVPN data templates -->
        <DataTemplate x:Key="eduVPNInstanceSelectionItemTemplate">
            <Grid
                Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Separator
                    Grid.ColumnSpan="2"
                    Style="{StaticResource eduVPNListBoxItemSeparatorStyle}"/>

                <!-- TODO: Provide alternative Source for instances with Logo==null. -->
                <Image
                    Grid.Column="0"
                    Grid.Row="1"
                    Source="{Binding Path=Logo}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="0,10,10,10"
                    RenderOptions.BitmapScalingMode="Fant"/>

                <TextBlock
                    Grid.Column="1"
                    Grid.Row="1"
                    Text="{Binding Path=DisplayName}"
                    Style="{StaticResource eduVPNListBoxItemTextStyle}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="eduVPNProfileSelectionItemTemplate">
            <Grid
                Margin="10,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="50" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <Separator
                    Grid.ColumnSpan="2"
                    Style="{StaticResource eduVPNListBoxItemSeparatorStyle}"/>

                <TextBlock
                    Grid.Column="0"
                    Grid.Row="1"
                    Text="{Binding Path=DisplayName}"
                    Style="{StaticResource eduVPNListBoxItemTextStyle}"/>

                <ContentControl
                    Grid.Column="1"
                    Grid.Row="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Margin="10,10,0,10"
                    Content="{StaticResource eduVPNTwoFactorAuthenticationIcon}"
                    Visibility="{Binding Path=IsTwoFactorAuthentication, Converter={StaticResource TwoFactorAuthenticationIconVisibilityConverter}, FallbackValue=Visibility.Collapsed}"
                    ToolTip="{x:Static res:Strings.TwoFactorAuthenticationRequired}"/>
            </Grid>
        </DataTemplate>
    </Application.Resources>
</Application>
