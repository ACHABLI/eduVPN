<!--
    eduVPN - End-user friendly VPN

    Copyright: 2017, The Commons Conservancy eduVPN Programme
    SPDX-License-Identifier: GPL-3.0+
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:res="clr-namespace:eduVPN.Client.Resources">

    <!-- eduVPN generic styles -->
    <Style x:Key="eduVPNBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <!-- eduVPN Buttons -->
    <Style x:Key="eduVPNHeaderButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                    Background="{StaticResource eduVPNHeaderTextBrushKey}"
                                    BorderBrush="{x:Null}"
                                    BorderThickness="0"
                                    CornerRadius="4">
                                <ContentPresenter
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="eduVPNChoiceButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="90"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border
                                    Background="{StaticResource eduVPNChoiceButtonHoverBrushKey}"
                                    CornerRadius="4">
                                <ContentPresenter
                                        Margin="3"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <ContentPresenter
                                    Margin="5"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="eduVPNButtonBaseStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="eduVPNButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNButtonBaseStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle
                                x:Name="Border"
                                Fill="{x:Null}"
                                Stroke="{StaticResource eduVPNHeaderBrushKey}"/>
                        <ContentPresenter
                                Margin="5"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="eduVPNNavigationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNButtonBaseStyle}">
        <Setter Property="Width" Value="25"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse
                                x:Name="Border"
                                Fill="{x:Null}"
                                Stroke="{StaticResource eduVPNHeaderBrushKey}"/>
                        <ContentPresenter
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource eduVPNHeaderBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- eduVPN Labels -->
    <Style x:Key="eduVPNHeaderStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <Style x:Key="eduVPNPageTitleStyle" TargetType="{x:Type Label}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- eduVPN Text Blocks -->
    <Style x:Key="eduVPNTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>
    <Style x:Key="eduVPNNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontSize" Value="11"/>
    </Style>
    <Style x:Key="eduVPNChoiceNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNNoteStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="20,130,20,10"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <Style x:Key="eduVPNListBoxItemTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,10,0,10"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="eduVPNInfoLabelTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="eduVPNInfoTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!-- eduVPN Separator styles -->
    <Style x:Key="eduVPNListBoxItemSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- eduVPN ListBoxes -->
    <Style x:Key="eduVPNListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    </Style>
    <Style x:Key="eduVPNInlineListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource eduVPNListStyle}">
        <Setter Property="Margin" Value="10,0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- eduVPN ListBox Items -->
    <Style x:Key="eduVPNListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource eduVPNChoiceButtonHoverBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- eduVPN Text Boxes -->
    <Style x:Key="eduVPNTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- eduVPN Combo Boxes -->
    <Style x:Key="eduVPNComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- eduVPN Grids -->
    <Style x:Key="eduVPNCombinedControlGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- eduVPN Stack Panels -->
    <Style x:Key="eduVPNCombinedControlStackPanelStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- eduVPN Status Bars StatusBar -->
    <Style x:Key="eduVPNInfoBarStyle" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Style.Resources>
            <Style TargetType="{x:Type StatusBarItem}">
                <Setter Property="VerticalContentAlignment" Value="Top"/>
            </Style>
        </Style.Resources>
    </Style>
    <Style x:Key="eduVPNInlineInfoBarStyle" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Style.Resources>
            <Style TargetType="{x:Type StatusBarItem}">
                <Setter Property="VerticalContentAlignment" Value="Top"/>
            </Style>
        </Style.Resources>
    </Style>

    <!-- ConnectWizard page templates -->
    <Style x:Key="eduVPNConnectWizardPage" TargetType="{x:Type Page}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StatusBar
                                Style="{StaticResource eduVPNInfoBarStyle}"
                                Visibility="{Binding Path=Error, Converter={StaticResource StatusBarVisibilityConverter}, FallbackValue=Visibility.Collapsed}">
                            <StatusBarItem>
                                <ContentControl Content="{StaticResource eduVPNExclamationIcon}"/>
                            </StatusBarItem>
                            <StatusBarItem>
                                <TextBlock
                                        TextWrapping="Wrap"
                                        Text="{Binding Path=Error, Converter={StaticResource ExceptionMessageConverter}}"/>
                            </StatusBarItem>
                        </StatusBar>

                        <ContentPresenter
                                Grid.Row="1"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="eduVPNConnectWizardPageWithBack" TargetType="{x:Type Page}" BasedOn="{StaticResource eduVPNConnectWizardPage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Page}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="45"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StatusBar
                                Style="{StaticResource eduVPNInfoBarStyle}"
                                Visibility="{Binding Path=Error, Converter={StaticResource StatusBarVisibilityConverter}, FallbackValue=Visibility.Collapsed}">
                            <StatusBarItem>
                                <ContentControl Content="{StaticResource eduVPNExclamationIcon}"/>
                            </StatusBarItem>
                            <StatusBarItem>
                                <TextBlock
                                        TextWrapping="Wrap"
                                        Text="{Binding Path=Error, Converter={StaticResource ExceptionMessageConverter}}"/>
                            </StatusBarItem>
                        </StatusBar>

                        <Grid
                                Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button
                                    Style="{StaticResource eduVPNNavigationButtonStyle}"
                                    AutomationProperties.Name="{x:Static res:Strings.ButtonBackTitle}"
                                    Command="{Binding Path=NavigateBack}">&lt;</Button>

                            <Label
                                    Grid.Column="1"
                                    Style="{StaticResource eduVPNPageTitleStyle}"
                                    Content="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Grid>

                        <ContentPresenter
                                Grid.Row="2"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
