<!--
    eduVPN - End-user friendly VPN

    Copyright: 2017, The Commons Conservancy eduVPN Programme
    SPDX-License-Identifier: GPL-3.0+
-->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:view="clr-namespace:eduVPN.Views"
    xmlns:res="clr-namespace:eduVPN.Client.Resources">

    <!--
        eduVPN Generic Styles
    -->

    <Style x:Key="eduVPNBaseStyle" TargetType="{x:Type Control}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>


    <!--
        eduVPN Buttons
    -->

    <Style x:Key="eduVPNButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Width" Value="100"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{StaticResource eduVPNHeaderBrushKey}"
                        CornerRadius="6">
                        <ContentPresenter
                            Margin="3"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource eduVPNButtonHoverBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="eduVPNLinkButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{x:Null}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNButtonHoverBrushKey}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
        eduVPN Text Blocks
    -->

    <Style x:Key="eduVPNTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="eduVPNListBoxItemTextStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="eduVPNInfoTitleTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
    </Style>

    <Style x:Key="eduVPNInfoLabelTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <Style x:Key="eduVPNInfoDataBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNInfoLabelTextBlockStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="eduVPNMessageBodyStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <Style x:Key="eduVPNNoteTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontStyle" Value="Italic"/>
    </Style>

    <Style x:Key="eduVPNVersionTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
    </Style>

    <Style x:Key="eduVPNCopyrightTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="FontSize" Value="12"/>
    </Style>


    <!--
        eduVPN Separator Styles
    -->

    <Style x:Key="eduVPNSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{StaticResource eduVPNHeaderBrushKey}"/>
    </Style>

    <Style x:Key="eduVPNListBoxItemSeparatorStyle" TargetType="{x:Type Separator}" BasedOn="{StaticResource eduVPNSeparatorStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!--
        eduVPN ListBoxes
    -->

    <Style x:Key="eduVPNListStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Path=Items.Count, RelativeSource={x:Static RelativeSource.Self}}"
                Value="0">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource eduVPNNoteTextBlockStyle}"
                                Text="{x:Static res:Strings.ListBoxNoItems}"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="eduVPNListBoxItemStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource eduVPNButtonHoverBrushKey}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
        eduVPN Combo Boxes
    -->

    <Style x:Key="eduVPNComboBoxStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{StaticResource eduVPNControlBorderKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="eduVPNComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource eduVPNButtonHoverBrushKey}"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
        eduVPN Grids
    -->

    <Style x:Key="eduVPNPageContentGridStyle" TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="-5"/>
    </Style>


    <!--
        eduVPN Status Bars
    -->

    <Style x:Key="eduVPNInlineInfoBarStyle" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
        <Style.Resources>
            <Style TargetType="{x:Type StatusBarItem}">
                <Setter Property="VerticalContentAlignment" Value="Top"/>
            </Style>
        </Style.Resources>
    </Style>

    <Style x:Key="eduVPNInfoBarStyle" TargetType="{x:Type StatusBar}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InfoBrushKey}}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InfoTextBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Style.Resources>
            <Style TargetType="{x:Type StatusBarItem}">
                <Setter Property="VerticalContentAlignment" Value="Top"/>
            </Style>
        </Style.Resources>
    </Style>


    <!--
        eduVPN Progress Bars
    -->
    <Style x:Key="eduVPNProgressBarStyle" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Height" Value="16"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>


    <!--
        eduVPN Check Boxes
    -->
    <Style x:Key="eduVPNCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Width="27">
                        <Border
                            x:Name="Slot"
                            Margin="3"
                            Background="{StaticResource eduVPNCheckboxSlotBrushKey}"
                            CornerRadius="6"/>

                        <Ellipse
                            x:Name="Knob"
                            HorizontalAlignment="Left"
                            Width="15"
                            Height="15"
                            Fill="{StaticResource eduVPNCheckboxKnobBrushKey}">
                            <Ellipse.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform X="0" Y="0"/>
                                </TransformGroup>
                            </Ellipse.RenderTransform>
                        </Ellipse>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Knob"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                From="0"
                                                To="12"
                                                Duration="0:0:0.1"
                                                AutoReverse="False"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>

                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <BeginStoryboard.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Knob"
                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)"
                                                From="12"
                                                To="0"
                                                Duration="0:0:0.1"
                                                AutoReverse="False"/>
                                        </Storyboard>
                                    </BeginStoryboard.Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.25"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--
        Windows
    -->

    <Style x:Key="eduVPNWindow" TargetType="{x:Type view:Window}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="Background" Value="{StaticResource eduVPNWindowBrushKey}"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNWindowTextBrushKey}"/>
        <Setter Property="BorderBrush" Value="{StaticResource eduVPNWindowBorderKey}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsBusy}" Value="True">
                <Setter Property="Cursor" Value="AppStarting"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!--
        ConnectWizard
    -->

    <Style x:Key="eduVPNHeaderTextBlockStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="eduVPNHeaderButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        CornerRadius="4">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
        ConnectWizard Page Templates
    -->

    <Style x:Key="eduVPNPageTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style x:Key="eduVPNNavigationButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNBaseStyle}">
        <Setter Property="Width" Value="22"/>
        <Setter Property="Height" Value="22"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Ellipse
                            x:Name="Border"
                            Fill="{x:Null}"
                            Stroke="{StaticResource eduVPNHeaderBrushKey}"/>

                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Fill"
                                Value="{StaticResource eduVPNHeaderBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Fill"
                                Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
                            <Setter
                                TargetName="Border"
                                Property="Stroke"
                                Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="eduVPNErrorStatusBar" TargetType="{x:Type Control}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Visibility" Value="{Binding Path=Error, Converter={StaticResource ExceptionMessageVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StatusBar
                        x:Name="StatusBar"
                        Height="Auto"
                        Style="{StaticResource eduVPNInfoBarStyle}">
                        <StatusBarItem>
                            <ContentControl
                                IsTabStop="False"
                                Content="{StaticResource eduVPNExclamationIcon}"/>
                        </StatusBarItem>
                        <StatusBarItem>
                            <Grid
                                Margin="-5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Margin="5"
                                    TextWrapping="Wrap"
                                    Text="{Binding Path=Error, Converter={StaticResource ExceptionMessageConverter}}"/>

                                <Button
                                    Grid.Column="1"
                                    Margin="5"
                                    VerticalAlignment="Top"
                                    Style="{StaticResource eduVPNLinkButtonStyle}"
                                    Command="{Binding Path=CopyError}"
                                    Content="{x:Static res:Strings.ButtonCopy}"/>
                            </Grid>
                        </StatusBarItem>
                    </StatusBar>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=Error}" Value="{x:Null}">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="StatusBar"
                                            Storyboard.TargetProperty="MaxHeight"
                                            From="200"
                                            To="0"
                                            Duration="0:0:1"
                                            AutoReverse="False"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="StatusBar"
                                            Storyboard.TargetProperty="MaxHeight"
                                            From="0"
                                            To="200"
                                            Duration="0:0:1"
                                            AutoReverse="False"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="eduVPNConnectWizardPage" TargetType="{x:Type Page}">
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:ConnectWizardPage}">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="45"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Button
                            Style="{StaticResource eduVPNNavigationButtonStyle}"
                            AutomationProperties.Name="{x:Static res:Strings.ButtonBackTitle}"
                            Command="{Binding Path=NavigateBack}">&lt;</Button>

                        <TextBlock
                            Grid.Column="1"
                            Margin="-35,10,10,10"
                            VerticalAlignment="Top"
                            Style="{StaticResource eduVPNPageTitleStyle}"
                            Text="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <TextBlock
                            Grid.ColumnSpan="2"
                            Grid.Row="1"
                            Margin="30,10"
                            Style="{StaticResource eduVPNTextBlockStyle}"
                            Visibility="{Binding Path=Description, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}"
                            Text="{Binding Path=Description, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter
                            Grid.ColumnSpan="2"
                            Grid.Row="2"
                            Margin="10"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="eduVPNConnectWizardPageWithSettings" TargetType="{x:Type Page}" BasedOn="{StaticResource eduVPNConnectWizardPage}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type view:ConnectWizardPage}">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="45"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="45"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Button
                            Style="{StaticResource eduVPNNavigationButtonStyle}"
                            AutomationProperties.Name="{x:Static res:Strings.ButtonBackTitle}"
                            ToolTip="{x:Static res:Strings.ButtonBackTitle}"
                            Command="{Binding Path=NavigateBack}">&lt;</Button>

                        <TextBlock
                            Grid.Column="1"
                            Margin="-35,10,-35,10"
                            VerticalAlignment="Top"
                            Style="{StaticResource eduVPNPageTitleStyle}"
                            Text="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <Button
                            Grid.Column="2"
                            Style="{StaticResource eduVPNNavigationButtonStyle}"
                            AutomationProperties.Name="{x:Static res:Strings.ButtonSettingsTitle}"
                            ToolTip="{x:Static res:Strings.ButtonSettingsTitle}"
                            Command="{Binding Path=Parent.NavigateTo}"
                            CommandParameter="{Binding Path=Parent.SettingsPage}">
                            <Button.Template>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Ellipse
                                            x:Name="Border"
                                            Fill="{x:Null}"
                                            Stroke="{StaticResource eduVPNHeaderBrushKey}"/>

                                        <Image
                                            x:Name="Image"
                                            MaxHeight="14"
                                            MaxWidth="14"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Source="pack://application:,,,/Resources/SettingsBlue.png"
                                            RenderOptions.BitmapScalingMode="Fant"/>
                                    </Grid>

                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter
                                                TargetName="Border"
                                                Property="Fill"
                                                Value="{StaticResource eduVPNHeaderBrushKey}"/>
                                            <Setter
                                                TargetName="Image"
                                                Property="Source"
                                                Value="pack://application:,,,/Resources/Settings.png"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter
                                                TargetName="Border"
                                                Property="Fill"
                                                Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
                                            <Setter
                                                TargetName="Border"
                                                Property="Stroke"
                                                Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <TextBlock
                            Grid.ColumnSpan="3"
                            Grid.Row="1"
                            Margin="30,10"
                            Style="{StaticResource eduVPNTextBlockStyle}"
                            Visibility="{Binding Path=Description, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource StringVisibilityConverter}, FallbackValue={x:Static Visibility.Collapsed}}"
                            Text="{Binding Path=Description, RelativeSource={RelativeSource TemplatedParent}}"/>

                        <ContentPresenter
                            Grid.ColumnSpan="3"
                            Grid.Row="2"
                            Margin="10"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!--
        Popups
    -->

    <Style x:Key="eduVPNPopupHeaderButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNHeaderButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{x:Null}"
                        BorderBrush="{x:Null}"
                        BorderThickness="0"
                        CornerRadius="4">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource eduVPNHeaderBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--
        Choice Buttons
    -->

    <Style x:Key="eduVPNChoiceItemsControlStyle" TargetType="{x:Type ItemsControl}">
        <Setter Property="IsTabStop" Value="False"/>
    </Style>

    <Style x:Key="eduVPNChoiceButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource eduVPNButtonStyle}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="MinHeight" Value="90"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="Border"
                        Background="{StaticResource eduVPNHeaderBrushKey}"
                        CornerRadius="6">
                        <ContentPresenter
                            Margin="3"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource eduVPNButtonHoverBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{StaticResource eduVPNButtonPressedBrushKey}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="eduVPNChoiceIconStyle" TargetType="{x:Type Image}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="RenderOptions.BitmapScalingMode" Value="Fant"/>
    </Style>

    <Style x:Key="eduVPNChoiceNoteStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderTextBrushKey}"/>
    </Style>


    <!--
        Sections
    -->

    <Style x:Key="eduVPNSectionTitleStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource eduVPNTextBlockStyle}">
        <Setter Property="Foreground" Value="{StaticResource eduVPNHeaderBrushKey}"/>
    </Style>

</ResourceDictionary>
